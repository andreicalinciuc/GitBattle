{"version":3,"sources":["assets/gitBattle.png","pages/home.js","utility/api.js","components/Battle/selectUser.js","store/actions.js","components/Battle/battleListItem.js","pages/battle.js","components/Group/addUser.js","components/Group/userGroupContainer.js","components/GroutStatistics/FollowersCharts.js","components/GroutStatistics/FollowingCharts.js","components/GroutStatistics/PublicReposCharts.js","components/GroutStatistics/PublicGistsCharts.js","components/GroutStatistics/DaysCharts.js","pages/groupStatistics.js","pages/group.js","utility/constants.js","components/Popular/selectPopular.js","components/Popular/popularListItem.js","pages/popular.js","pages/notReady.js","history.js","utility/ErrorBoundary.js","components/Layout/Layout.js","App.js","serviceWorker.js","store/reducers/battleReducer.js","store/reducers/groupReducer.js","index.js"],"names":["module","exports","Home","click","this","props","transitionName","transitionAppear","transitionAppearTimeout","className","src","require","width","alt","Tabs","value","to","Tab","label","onClick","React","Component","API","fetchUser","username","a","fetch","then","response","json","catch","error","toast","toUpperCase","autoClose","battle","users","map","user","userRepo","getListByID","id","data","saveList","team","method","headers","body","JSON","stringify","success","position","POSITION","BOTTOM_RIGHT","fetchRepo","language","SearchUser","setState","isLoading","api","undefined","respone","score","calculateScore","repo","submitUser","state","resetUser","inputData","formSerial","public_repos","followers","following","message","avatar_url","login","CircularProgress","Input","onChange","e","target","onChangeComponentData","placeholder","type","inputRef","el","name","resetFetchUser","removeFormButtonClick","disabled","length","PureComponent","connect","dispatch","removeFormSerial","BattleResult","winnerScore","location","public_gists","date1","date2","differenceMs","Math","abs","round","days_between","Date","created_at","Battle","transitionEnterTimeout","transitionLeaveTimeout","dyanicDataFromFetch","dynamicFormSerial","onAddFormButtonClick","onRemoveFormButtonClick","reset","Tooltip","title","item","key","dynamicFormData","AddUser","addTeam","gitData","UserContainer","imgProfile","height","fight","removeUser","FollowersCharts","left","right","leftListFolowing","leftTeam","rightListFolowing","rightTeam","options","xaxis","categories","leftListName","series","rightListName","FollowingChart","leftListFolowes","rightListFolowes","PublicReposCharts","leftListPublicRepos","rightListPublicRepos","PublicGistsCharts","leftListPublicGists","rightListPublicGists","DaysCharts","leftListDays","rightListDays","Statistics","FollowingCharts","group","Group","componentDidMount","leftList","rightList","setTeam","save_datas","statistics","scoreLeftTeam","scoreRightTeamL","index","calculateWinner","languages","SelectedLanguage","onChangeSearchInput","evt","debouncedSearch","debounce","query","lang","selectItem","PopularListRender","href","popularItem","html_url","watchers","owner","Popular","activeLabel","console","log","toLowerCase","NotReady","frameborder","allowfullscreen","allow","createHistory","ErrorBoundary","errorInfo","style","whiteSpace","toString","componentStack","children","Layout","readyToFight","ready","history","bodyClassName","exact","path","App","Boolean","window","hostname","match","initialState","reducer","action","tempDynamicSerial","lastFormSerial","concat","slice","tempDynamicComponentData","removeItem","splice","indexOf","push","tempDynamicFetchData","removeIndex","removeIndexForm","removeIndexFetch","tempDynamicFetchUser","calculateTotalScore","listTeam","totalScoreLeftTeam","totalScoreRightTeam","temporayDynamicLeftTeam","tempScoreUser","temporayDynamicRightTeam","rootReducer","combineReducers","battleReducer","groupReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.a40882e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitBattle.60dfa264.png\";","import React from \"react\";\r\nimport \"../components/Home/home.css\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    const { click } = this.props;\r\n    return (\r\n      <ReactCSSTransitionGroup\r\n        transitionName=\"fade\"\r\n        transitionAppear={true}\r\n        transitionAppearTimeout={1000}\r\n      >\r\n        <div className=\"home-container\">\r\n          <img\r\n            src={require(\"../assets/gitBattle.png\")}\r\n            width=\"70%\"\r\n            alt=\"logo\"\r\n          ></img>\r\n          <p className=\"home-description\">Are you ready to fight?</p>\r\n\r\n          <div>\r\n            <Tabs value={false}>\r\n              <Link to=\"/battle\" className=\"navigationLink\">\r\n                <Tab label=\"Yes\" onClick={() => click()} />\r\n              </Link>\r\n              <Link to=\"/notReady\" className=\"navigationLink\">\r\n                <Tab label=\"No\" />\r\n              </Link>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </ReactCSSTransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nconst API = \"https://api.github.com\";\r\nasync function fetchUser(username) {\r\n  return await fetch(`${API}/users/${username}`)\r\n    .then((response) => response.json())\r\n    .catch((error) => {\r\n      toast.error(`Error: ${error} `.toUpperCase(), {\r\n        autoClose: 3000,\r\n        className: \"dark-toast\",\r\n      });\r\n    });\r\n}\r\n\r\nasync function fetchRepos(username) {\r\n  return await fetch(`${API}/users/${username}/repos`, {\r\n    mode: \"no-cors\",\r\n  }).then((response) =>\r\n    response.json().catch((error) => {\r\n      toast.error(`Error: ${error} `.toUpperCase(), {\r\n        autoClose: 3000,\r\n        className: \"dark-toast\",\r\n      });\r\n    })\r\n  );\r\n}\r\n\r\nasync function fetchStatsRepo(username, repo) {\r\n  return await fetch(`  ${API}/repos/${username}/${repo}/stats/code_frequency`)\r\n    .then((response) => response)\r\n    .catch((error) => {\r\n      toast.error(`Error: ${error} `.toUpperCase(), {\r\n        autoClose: 3000,\r\n        className: \"dark-toast\",\r\n      });\r\n    });\r\n}\r\n\r\nfunction getListByID(id) {\r\n  return fetch(\"https://jsonblob.com/api/jsonBlob/\" + id)\r\n    .then((response) => response.json())\r\n    .then((data) => data[\"users\"])\r\n    .catch((error) => {\r\n      toast.error(`Error: ${error} `.toUpperCase(), {\r\n        autoClose: 3000,\r\n        className: \"dark-toast\",\r\n      });\r\n    });\r\n}\r\nfunction saveList(id, data, team) {\r\n  return fetch(\"https://jsonblob.com/api/jsonBlob/\" + id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      toast.success(`Succes ${team}`.toUpperCase(), {\r\n        autoClose: 3000,\r\n        className: \"dark-toast\",\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    });\r\n}\r\nexport default {\r\n  battle: async function (users) {\r\n    return users.map(async (user) => {\r\n      return await fetchUser(user.value);\r\n    });\r\n  },\r\n  fetchUser: async (user) => {\r\n    {\r\n      const userRepo = fetchUser(user);\r\n      // const repos = await fetchRepos(user);\r\n      // const stats = repos.map(async (item) => {\r\n      //   return await fetchStatsRepo(user, item.name);\r\n      // });\r\n      return userRepo;\r\n    }\r\n  },\r\n  getListByID: (id) => {\r\n    return getListByID(id);\r\n  },\r\n  saveList: (id, data, team) => {\r\n    return saveList(id, data, team);\r\n  },\r\n\r\n  fetchRepo: function (language) {\r\n    return fetch(\r\n      `${API}/search/repositories?q=stars:>5+language:${language}&sort=stars&order=desc&type=Repositories`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => data[\"items\"])\r\n      .catch((error) => {\r\n        toast.error(`Error: ${error} `.toUpperCase(), {\r\n          autoClose: 3000,\r\n          className: \"dark-toast\",\r\n        });\r\n      });\r\n  },\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../Battle/battle.css\";\r\nimport api from \"../../utility/api\";\r\nimport { Tab, Tabs, Input, CircularProgress } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions\";\r\n\r\nclass SearchUser extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      repo: null,\r\n      score: 0,\r\n      isLoading: true,\r\n      inputData: {\r\n        formSerial: null,\r\n        value: null,\r\n      },\r\n    };\r\n  }\r\n\r\n  calculateScore(user) {\r\n    var score = user.public_repos + user.followers + user.following;\r\n    return score;\r\n  }\r\n  fetchUser = async (data) => {\r\n    if (data != null) {\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      let respone = await api.fetchUser(data);\r\n     if(respone!==undefined){\r\n      let score = this.calculateScore(respone);\r\n      this.setState({\r\n        repo: respone,\r\n        isLoading: true,\r\n        score: score,\r\n      });\r\n      this.props.submitUser(respone, this.state.score);\r\n    }\r\n     }\r\n      \r\n  };\r\n  resetUser = () => {\r\n    this.setState({\r\n      repo: null,\r\n      inputData: {\r\n        formSerial: null,\r\n        value: null,\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    const { formSerial } = this.props;\r\n    return (\r\n      <div className=\"user-container-search\">\r\n        {this.state.isLoading === true ? (\r\n          this.state.repo != null ? (\r\n            <div>\r\n              {this.state.repo.message != null ? (\r\n                <p className=\"error\">{this.state.repo.message}!</p>\r\n              ) : (\r\n                <div className=\"user-find\">\r\n                  <img src={this.state.repo.avatar_url} width=\"80px\"></img>\r\n                  <p>@{this.state.repo.login}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : null\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n        <Input\r\n          value={this.state.value}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              inputData: {\r\n                formSerial: formSerial,\r\n                value: e.target.value,\r\n              },\r\n            });\r\n            this.state.inputData.value !== null &&\r\n              this.props.onChangeComponentData({\r\n                formSerial: formSerial,\r\n                value: e.target.value,\r\n              });\r\n          }}\r\n          placeholder={`User ${formSerial}`}\r\n          type=\"text\"\r\n          id=\"name\"\r\n          inputRef={(el) => (this.name = el)}\r\n        />\r\n        <Tabs value={false}>\r\n          {this.state.repo === null ? (\r\n            <Tab\r\n              onClick={() => this.fetchUser(this.state.inputData.value)}\r\n              label=\"Submit\"\r\n            />\r\n          ) : (\r\n            <Tab\r\n              onClick={() => {\r\n                this.props.resetFetchUser(this.name.value);\r\n                this.name.value = \"\";\r\n                this.resetUser();\r\n              }}\r\n              label=\"Reset\"\r\n            />\r\n          )}\r\n          <Tab\r\n            onClick={() =>\r\n              this.props.removeFormButtonClick(\r\n                formSerial,\r\n                this.state.inputData.value\r\n              )\r\n            }\r\n            label=\"Remove\"\r\n            disabled={this.props.length <= 1}\r\n          />\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeComponentData: (data) => {\r\n      dispatch({ type: actionTypes.MODIFY_CONTENT, data: data });\r\n    },\r\n    removeFormButtonClick: (formSerial, name) => {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_FORM_CLICK,\r\n        removeFormSerial: formSerial,\r\n        name: name,\r\n      });\r\n    },\r\n\r\n    submitUser: (user, score) => {\r\n      dispatch({\r\n        type: actionTypes.SUBMIT_FETCH_USER,\r\n        user: user,\r\n        score: score,\r\n      });\r\n    },\r\n    resetFetchUser: (user) => {\r\n      dispatch({ type: actionTypes.RESET_USER, user: user });\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(SearchUser);\r\n","export const ADD_FORM = \"ADD_FORM\";\r\nexport const REMOVE_FORM = \"REMOVE_FORM\";\r\nexport const MODIFY_CONTENT = \"MODIFY_CONTENT\";\r\nexport const REMOVE_FORM_CLICK = \"REMOVE_FORM_CLICK\";\r\nexport const RESET = \"RESET\";\r\nexport const SUBMIT_FETCH_USER = \"SUBMIT_FETCH_USER\";\r\nexport const SET_TEAM = \"SET_TEAM\";\r\nexport const ADD_TEAM = \"ADD_TEAM\";\r\nexport const REMOVE_USER = \"REMOVE_USER\";\r\nexport const RESET_USER = \"RESET_USER\";\r\n\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./battle.css\";\r\nclass BattleResult extends PureComponent {\r\n  render() {\r\n    const { user, winnerScore } = this.props;\r\n\r\n    function days_between(date1, date2) {\r\n      const ONE_DAY = 1000 * 60 * 60 * 24;\r\n      const differenceMs = Math.abs(date1 - date2);\r\n      return Math.round(differenceMs / ONE_DAY);\r\n    }\r\n    function calculateScore(user) {\r\n      var score = user.public_repos + user.followers + user.following;\r\n      return score;\r\n    }\r\n    var score = calculateScore(user);\r\n    return (\r\n      <div\r\n        className={\r\n          score === winnerScore\r\n            ? \"user-container-search winner\"\r\n            : \"user-container-search looser\"\r\n        }\r\n      >\r\n        {user.message != null ? (\r\n          <p className=\"error\">{user.message}!</p>\r\n        ) : (\r\n          <div className=\"user-find\">\r\n            {score === winnerScore ? (\r\n              <p className=\"winner-text\">Winner</p>\r\n            ) : null}\r\n            <p>Score: {score}</p>\r\n            <img src={user.avatar_url} width=\"80px\" alt=\"User profile\"></img>\r\n            <p>@{user.login}</p>\r\n            <p>\r\n              Location: {user.location == null ? \"Not set yet\" : user.location}\r\n            </p>\r\n            <p>Public repos: {user.public_repos}</p>\r\n            <p>Public gists: {user.public_gists}</p>\r\n            <p>Followers: {user.followers}</p>\r\n            <p>Following: {user.following}</p>\r\n            <p>Days:{days_between(new Date(user.created_at), new Date())}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BattleResult;\r\n","import React from \"react\";\r\nimport SearchUser from \"../components/Battle/selectUser\";\r\nimport { Tab, Tabs, Tooltip } from \"@material-ui/core\";\r\nimport BattleResult from \"../components/Battle/battleListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nclass Battle extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"battle-controller\">\r\n          <p>Find your fighters</p>\r\n          <ReactCSSTransitionGroup\r\n            transitionName=\"fade\"\r\n            transitionEnterTimeout={300}\r\n            transitionLeaveTimeout={300}\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={1000}\r\n          >\r\n            {this.props.dyanicDataFromFetch.length !==\r\n            this.props.dynamicFormSerial.length ? (\r\n              <Tabs value={false}>\r\n                <Tab onClick={this.props.onAddFormButtonClick} label=\"+\" />\r\n\r\n                <Tab\r\n                  onClick={this.props.onRemoveFormButtonClick}\r\n                  label=\"-\"\r\n                  disabled={this.props.dynamicFormSerial > 0}\r\n                />\r\n              </Tabs>\r\n            ) : (\r\n              <div className=\"fight-result-controler\">\r\n                <Tab onClick={() => this.props.reset()} label=\"Reset\" />\r\n                <Tooltip\r\n                  title=\"Score: Public repo + Followers + Following\"\r\n                  className=\"score-info\"\r\n                >\r\n                  <InfoIcon />\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </ReactCSSTransitionGroup>\r\n        </div>\r\n\r\n        <div className=\"users-search-section\">\r\n          {this.props.dyanicDataFromFetch.length ===\r\n          this.props.dynamicFormSerial.length\r\n            ? this.props.dyanicDataFromFetch.map((item) => {\r\n                return (\r\n                  <BattleResult\r\n                    user={item}\r\n                    key={item.id}\r\n                    winnerScore={this.props.winnerScore}\r\n                  />\r\n                );\r\n              })\r\n            : this.props.dynamicFormSerial.length >= 1 &&\r\n              this.props.dynamicFormSerial.map((item) => {\r\n                return (\r\n                  <SearchUser\r\n                    key={item}\r\n                    formSerial={item}\r\n                    length={this.props.dynamicFormSerial.length}\r\n                  />\r\n                );\r\n              })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dynamicFormSerial: state.battle.dynamicFormSerial,\r\n    dynamicFormData: state.battle.dynamicFormData,\r\n    dyanicDataFromFetch: state.battle.dyanicDataFromFetch,\r\n    winnerScore: state.battle.winnerScore,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddFormButtonClick: () => {\r\n      dispatch({ type: actionTypes.ADD_FORM });\r\n    },\r\n\r\n    onRemoveFormButtonClick: () => {\r\n      dispatch({ type: actionTypes.REMOVE_FORM });\r\n    },\r\n    reset: () => {\r\n      dispatch({ type: actionTypes.RESET });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battle);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../Battle/battle.css\";\r\nimport { Tab, Tabs, Input, CircularProgress } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport api from \"../../utility/api\";\r\nimport \"../Group/group.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions\";\r\n\r\nclass AddUser extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      repo: null,\r\n      isLoading: true,\r\n      inputData: {\r\n        value: null,\r\n      },\r\n      score: 0,\r\n    };\r\n  }\r\n  calculateScore = (user) => {\r\n    var score = user.public_repos + user.followers + user.following;\r\n    return score;\r\n  };\r\n  fetchUser = async (data) => {\r\n    if (data != null) {\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      var respone = await api.fetchUser(data);\r\n      if (respone !== undefined) {\r\n        let score = this.calculateScore(respone);\r\n        this.setState({\r\n          repo: respone,\r\n          isLoading: true,\r\n          score: score,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  resetUser = () => {\r\n    this.setState({\r\n      repo: null,\r\n      isLoading: true,\r\n      inputData: {\r\n        value: null,\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"user-container-search\">\r\n        {this.state.isLoading == true ? (\r\n          this.state.repo != null ? (\r\n            this.state.repo.message != null ? (\r\n              <p className=\"error\">{this.state.repo.message}!</p>\r\n            ) : (\r\n              <div className=\"select-team-section\">\r\n                <ArrowBackIcon\r\n                  onClick={() => {\r\n                    this.props.addTeam(\r\n                      {\r\n                        name: this.state.repo.login,\r\n                        gitData: this.state.repo,\r\n                        score: this.state.score,\r\n                      },\r\n                      \"left\",\r\n                      this.state.score\r\n                    );\r\n                  }}\r\n                />\r\n                <div>\r\n                  <div className=\"user-find\">\r\n                    <img src={this.state.repo.avatar_url} width=\"80px\"></img>\r\n                    <p>@{this.state.repo.login}</p>\r\n                  </div>\r\n                </div>\r\n                <ArrowForwardIcon\r\n                  onClick={() => {\r\n                    this.props.addTeam(\r\n                      {\r\n                        name: this.state.repo.login,\r\n                        gitData: this.state.repo,\r\n                        score: this.state.score,\r\n                      },\r\n                      \"right\",\r\n                      this.state.score\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            )\r\n          ) : null\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n        <Input\r\n          onChange={(e) => {\r\n            this.setState({\r\n              inputData: {\r\n                value: e.target.value,\r\n              },\r\n            });\r\n          }}\r\n          type=\"text\"\r\n          id=\"name\"\r\n          inputRef={(el) => (this.name = el)}\r\n          placeholder=\"Find your fighter\"\r\n        />\r\n        <Tabs value={false}>\r\n          {this.state.repo == null ? (\r\n            <Tab\r\n              onClick={() => this.fetchUser(this.state.inputData.value)}\r\n              label=\"Submit\"\r\n            />\r\n          ) : (\r\n            <Tab\r\n              onClick={() => {\r\n                this.name.value = \"\";\r\n                this.resetUser();\r\n              }}\r\n              label=\"Reset\"\r\n            />\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTeam: (user, team, score) => {\r\n      dispatch({\r\n        type: actionTypes.ADD_TEAM,\r\n        user: user,\r\n        team: team,\r\n        score: score,\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddUser);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../Group/addUser\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions\";\r\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\r\nclass UserContainer extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"user-team-container\">\r\n        <img src={this.props.imgProfile} width=\"35px\" height=\"35px\"></img>\r\n        <p>{this.props.name}</p>\r\n        {this.props.fight === true ? (\r\n          <p>Score: {this.props.score}</p>\r\n        ) : (\r\n          <RestoreFromTrashIcon\r\n            onClick={() => {\r\n              this.props.removeUser(this.props.name, this.props.team);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeUser: (name, team) => {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_USER,\r\n        name: name,\r\n        team: team,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(UserContainer);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../GroutStatistics/groupStatistics.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass FollowersCharts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      left: {},\r\n      right: {},\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    let leftListFolowing = this.props.leftTeam.map((item) => {\r\n      return item.gitData.followers;\r\n    });\r\n\r\n    let rightListFolowing = this.props.rightTeam.map((item) => {\r\n      return item.gitData.followers;\r\n    });\r\n    this.setState({\r\n      left: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.leftListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Left Team\",\r\n            data: leftListFolowing,\r\n          },\r\n        ],\r\n      },\r\n      right: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.rightListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Right Team\",\r\n            data: rightListFolowing,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chart\">\r\n        <p> {this.props.title}</p>\r\n        <div className=\"chart-section\">\r\n          <Chart\r\n            options={this.state.left.options}\r\n            series={this.state.left.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n          <Chart\r\n            options={this.state.right.options}\r\n            series={this.state.right.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowersCharts;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../GroutStatistics/groupStatistics.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass FollowingChart extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      left: {},\r\n      right: {},\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    let leftListFolowes = this.props.leftTeam.map((item) => {\r\n      return item.gitData.following;\r\n    });\r\n\r\n    let rightListFolowes = this.props.rightTeam.map((item) => {\r\n      return item.gitData.following;\r\n    });\r\n    this.setState({\r\n      left: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.leftListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Left Team\",\r\n            data: leftListFolowes,\r\n          },\r\n        ],\r\n      },\r\n      right: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.rightListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Right Team\",\r\n            data: rightListFolowes,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chart\">\r\n        <p> {this.props.title}</p>\r\n        <div className=\"chart-section\">\r\n          <Chart\r\n            options={this.state.left.options}\r\n            series={this.state.left.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n          <Chart\r\n            options={this.state.right.options}\r\n            series={this.state.right.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowingChart;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../GroutStatistics/groupStatistics.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass PublicReposCharts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      left: {},\r\n      right: {},\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    let leftListPublicRepos = this.props.leftTeam.map((item) => {\r\n      return item.gitData.public_repos;\r\n    });\r\n\r\n    let rightListPublicRepos = this.props.rightTeam.map((item) => {\r\n      return item.gitData.public_repos;\r\n    });\r\n    this.setState({\r\n      left: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.leftListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Left Team\",\r\n            data: leftListPublicRepos,\r\n          },\r\n        ],\r\n      },\r\n      right: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.rightListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Right Team\",\r\n            data: rightListPublicRepos,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chart\">\r\n        <p> {this.props.title}</p>\r\n        <div className=\"chart-section\">\r\n          <Chart\r\n            options={this.state.left.options}\r\n            series={this.state.left.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n          <Chart\r\n            options={this.state.right.options}\r\n            series={this.state.right.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicReposCharts;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../GroutStatistics/groupStatistics.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass PublicGistsCharts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      left: {},\r\n      right: {},\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    let leftListPublicGists = this.props.leftTeam.map((item) => {\r\n      return item.gitData.public_gists;\r\n    });\r\n\r\n    let rightListPublicGists = this.props.rightTeam.map((item) => {\r\n      return item.gitData.public_gists;\r\n    });\r\n    this.setState({\r\n      left: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.leftListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Left Team\",\r\n            data: leftListPublicGists,\r\n          },\r\n        ],\r\n      },\r\n      right: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.rightListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Right Team\",\r\n            data: rightListPublicGists,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chart\">\r\n        <p> {this.props.title}</p>\r\n        <div className=\"chart-section\">\r\n          <Chart\r\n            options={this.state.left.options}\r\n            series={this.state.left.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n          <Chart\r\n            options={this.state.right.options}\r\n            series={this.state.right.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicGistsCharts;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../GroutStatistics/groupStatistics.css\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass DaysCharts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      left: {},\r\n      right: {},\r\n    };\r\n  }\r\n  days_between(date1, date2) {\r\n    const ONE_DAY = 1000 * 60 * 60 * 24;\r\n    const differenceMs = Math.abs(date1 - date2);\r\n    return Math.round(differenceMs / ONE_DAY);\r\n  }\r\n  componentWillMount() {\r\n    let leftListDays = this.props.leftTeam.map((item) => {\r\n      return this.days_between(new Date(item.gitData.created_at), new Date());\r\n    });\r\n\r\n    let rightListDays = this.props.rightTeam.map((item) => {\r\n      return this.days_between(new Date(item.gitData.created_at), new Date());\r\n    });\r\n    this.setState({\r\n      left: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.leftListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Left Team\",\r\n            data: leftListDays,\r\n          },\r\n        ],\r\n      },\r\n      right: {\r\n        options: {\r\n          xaxis: {\r\n            categories: this.props.rightListName,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Right Team\",\r\n            data: rightListDays,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chart\">\r\n        <p> {this.props.title}</p>\r\n        <div className=\"chart-section\">\r\n          <Chart\r\n            options={this.state.left.options}\r\n            series={this.state.left.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n          <Chart\r\n            options={this.state.right.options}\r\n            series={this.state.right.series}\r\n            type=\"bar\"\r\n            width={500}\r\n            height={320}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DaysCharts;\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport FollowersCharts from \"../components/GroutStatistics/FollowersCharts\";\r\nimport FollowingCharts from \"../components/GroutStatistics/FollowingCharts\";\r\nimport PublicReposCharts from \"../components/GroutStatistics/PublicReposCharts\";\r\nimport PublicGistsCharts from \"../components/GroutStatistics/PublicGistsCharts\";\r\nimport DaysCharts from \"../components/GroutStatistics/DaysCharts\";\r\n\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\n\r\nimport \"../components/GroutStatistics/FollowersCharts\";\r\nclass Statistics extends PureComponent {\r\n  render() {\r\n    let leftListName = this.props.leftTeam.map((item) => {\r\n      return item.name;\r\n    });\r\n    let rightListName = this.props.rightTeam.map((item) => {\r\n      return item.name;\r\n    });\r\n    return (\r\n      <ReactCSSTransitionGroup\r\n        transitionName=\"fade\"\r\n        transitionAppear={true}\r\n        transitionEnterTimeout={1000}\r\n        transitionLeaveTimeout={1000}\r\n        transitionAppearTimeout={1000}\r\n      >\r\n        <div className=\"charts-container\">\r\n          {/* initial am plecat cu ideea sa le fac pe toate diferite,de astea sunt 4 componente nu 1,insa tot astea veticale arata mai bine  */}\r\n          <FollowersCharts\r\n            leftTeam={this.props.leftTeam}\r\n            rightTeam={this.props.rightTeam}\r\n            leftListName={leftListName}\r\n            rightListName={rightListName}\r\n            title=\" Followers \"\r\n          ></FollowersCharts>\r\n\r\n          <FollowingCharts\r\n            leftTeam={this.props.leftTeam}\r\n            rightTeam={this.props.rightTeam}\r\n            leftListName={leftListName}\r\n            rightListName={rightListName}\r\n            title=\"Following\"\r\n          ></FollowingCharts>\r\n\r\n          <PublicReposCharts\r\n            leftTeam={this.props.leftTeam}\r\n            rightTeam={this.props.rightTeam}\r\n            leftListName={leftListName}\r\n            rightListName={rightListName}\r\n            title=\"Public Repos\"\r\n          ></PublicReposCharts>\r\n          <PublicGistsCharts\r\n            leftTeam={this.props.leftTeam}\r\n            rightTeam={this.props.rightTeam}\r\n            leftListName={leftListName}\r\n            rightListName={rightListName}\r\n            title=\"Public Repos\"\r\n          ></PublicGistsCharts>\r\n          <DaysCharts\r\n            leftTeam={this.props.leftTeam}\r\n            rightTeam={this.props.rightTeam}\r\n            leftListName={leftListName}\r\n            rightListName={rightListName}\r\n            title=\"Days\"\r\n          ></DaysCharts>\r\n        </div>\r\n      </ReactCSSTransitionGroup>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    leftTeam: state.group.leftTeam,\r\n    rightTeam: state.group.rightTeam,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Statistics);\r\n","import React from \"react\";\r\nimport api from \"../utility/api\";\r\nimport \"../components/Group/group.css\";\r\nimport { Tab, Tabs, Tooltip } from \"@material-ui/core\";\r\nimport AddUser from \"../components/Group/addUser\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport UserContainer from \"../components/Group/userGroupContainer\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport \"../components/Layout/Layout.css\";\r\nimport Statistics from \"../pages/groupStatistics\";\r\nimport \"../components/Layout/Layout.css\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nclass Group extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fight: false,\r\n      statistics: false,\r\n      winnerScore: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    var leftList = await api.getListByID(\r\n      \"af8e7eb3-8f6d-11ea-bd04-e70beb125682\"\r\n    );\r\n    var rightList = await api.getListByID(\r\n      \"cd457331-8f8e-11ea-bd04-5f6877a3510f\"\r\n    );\r\n\r\n    this.props.setTeam(leftList, rightList);\r\n  };\r\n\r\n  save_datas = async () => {\r\n    await api.saveList(\r\n      \"af8e7eb3-8f6d-11ea-bd04-e70beb125682\",\r\n      {\r\n        users: this.props.leftTeam,\r\n      },\r\n      \"left team\"\r\n    );\r\n    await api.saveList(\r\n      \"cd457331-8f8e-11ea-bd04-5f6877a3510f\",\r\n      {\r\n        users: this.props.rightTeam,\r\n      },\r\n      \"right team\"\r\n    );\r\n  };\r\n\r\n  calculateWinner() {\r\n    if (this.props.scoreLeftTeam > this.props.scoreRightTeamL) {\r\n      return this.setState({\r\n        winnerScore: this.props.scoreLeftTeam,\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        winnerScore: this.props.scoreRightTeamL,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.statistics === false ? (\r\n          <div className=\"group-list-section\">\r\n            <div\r\n              className={`group-list-container ${\r\n                this.state.fight === true\r\n                  ? this.state.winnerScore === this.props.scoreLeftTeam\r\n                    ? \"winner\"\r\n                    : \"looser\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {this.props.leftTeam.length > 0 ? (\r\n                <div className=\"group-users-zone\">\r\n                  {this.state.fight === true ? (\r\n                    <p>\r\n                      Total Score: {this.props.scoreLeftTeam}{\" \"}\r\n                      {this.state.fight === true\r\n                        ? this.state.winnerScore == this.props.scoreLeftTeam\r\n                          ? \"Winner\"\r\n                          : \"Looser\"\r\n                        : \"\"}\r\n                    </p>\r\n                  ) : null}\r\n                  <ReactCSSTransitionGroup\r\n                    transitionName=\"slideleft\"\r\n                    transitionEnterTimeout={300}\r\n                    transitionLeaveTimeout={300}\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={1000}\r\n                  >\r\n                    {this.props.leftTeam.map((item, index) => {\r\n                      return (\r\n                        <UserContainer\r\n                          key={index}\r\n                          imgProfile={item.gitData.avatar_url}\r\n                          name={item.gitData.login}\r\n                          team=\"left\"\r\n                          score={item.score}\r\n                          fight={this.state.fight}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </ReactCSSTransitionGroup>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {this.state.fight === false ? (\r\n              <div className=\"group-battle-controler\">\r\n                <Tabs value={false}>\r\n                  <Tab\r\n                    label=\"fight\"\r\n                    onClick={() => {\r\n                      this.setState({ fight: !this.state.fight });\r\n                      this.calculateWinner();\r\n                    }}\r\n                  ></Tab>\r\n                  <Tab label=\"save data\" onClick={() => this.save_datas()} />\r\n                </Tabs>\r\n                <ReactCSSTransitionGroup\r\n                  transitionName=\"fade\"\r\n                  transitionEnterTimeout={2000}\r\n                  transitionLeaveTimeout={1000}\r\n                  transitionAppear={true}\r\n                  transitionAppearTimeout={1000}\r\n                >\r\n                  <AddUser></AddUser>\r\n                </ReactCSSTransitionGroup>\r\n              </div>\r\n            ) : (\r\n              <div className=\"fight-result-controler\">\r\n                <Tabs value={false}>\r\n                  <Tab\r\n                    label=\"Add new player/s\"\r\n                    onClick={() => {\r\n                      this.setState({ fight: !this.state.fight });\r\n                    }}\r\n                  ></Tab>\r\n\r\n                  <Tab\r\n                    label=\"See statistics\"\r\n                    onClick={() => {\r\n                      this.setState({ statistics: true });\r\n                    }}\r\n                  />\r\n                </Tabs>\r\n                <Tooltip\r\n                  title=\"Score: Public repo + Followers + Following\"\r\n                  className=\"score-info\"\r\n                >\r\n                  <InfoIcon />\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n            <div\r\n              className={`group-list-container ${\r\n                this.state.fight === true\r\n                  ? this.state.winnerScore === this.props.scoreRightTeamL\r\n                    ? \"winner\"\r\n                    : \"looser\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {this.props.rightTeam.length > 0 ? (\r\n                <div className=\"group-users-zone\">\r\n                  {this.state.fight === true ? (\r\n                    <p>\r\n                      Total Score: {this.props.scoreRightTeamL}{\" \"}\r\n                      {this.state.fight === true\r\n                        ? this.state.winnerScore === this.props.scoreRightTeamL\r\n                          ? \"Winner\"\r\n                          : \"Looser\"\r\n                        : \"\"}\r\n                    </p>\r\n                  ) : null}\r\n\r\n                  <ReactCSSTransitionGroup\r\n                    transitionName=\"slideright\"\r\n                    transitionEnterTimeout={300}\r\n                    transitionLeaveTimeout={300}\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={1000}\r\n                  >\r\n                    {this.props.rightTeam.map((item, index) => {\r\n                      return (\r\n                        <UserContainer\r\n                          key={index}\r\n                          imgProfile={item.gitData.avatar_url}\r\n                          name={item.gitData.login}\r\n                          team=\"right\"\r\n                          score={item.score}\r\n                          fight={this.state.fight}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </ReactCSSTransitionGroup>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"navigationLink group-navigation\">\r\n            <Tab\r\n              label=\"back to fight\"\r\n              onClick={() => this.setState({ statistics: false })}\r\n            ></Tab>\r\n            <Statistics />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    leftTeam: state.group.leftTeam,\r\n    rightTeam: state.group.rightTeam,\r\n    scoreLeftTeam: state.group.scoreLeftTeam,\r\n    scoreRightTeamL: state.group.scoreRightTeamL,\r\n    winnerScore: state.group.winnerScore,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setTeam: (leftList, rightList) => {\r\n      dispatch({\r\n        type: actionTypes.SET_TEAM,\r\n        leftList: leftList,\r\n        rightList: rightList,\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);\r\n","export const languages = [\r\n  {\r\n    label: \"All\",\r\n    value: \"all\",\r\n  },\r\n  {\r\n    label: \"Javascript\",\r\n    value: \"javascript\",\r\n  },\r\n  {\r\n    label: \"CSS\",\r\n    value: \"css\",\r\n  },\r\n\r\n  {\r\n    label: \"Java\",\r\n    value: \"java\",\r\n  },\r\n  {\r\n    label: \"Python\",\r\n    value: \"python\",\r\n  },\r\n\r\n  {\r\n    label: \"Scala\",\r\n    value: \"scala\",\r\n  },\r\n\r\n  {\r\n    label: \"c#\",\r\n    value: \"csharp\",\r\n  },\r\n  {\r\n    label: \"c++\",\r\n    value: \"cpp\",\r\n  }\r\n];\r\n\r\nexport default languages;\r\n","import React, { Component, PropTypes } from \"react\";\r\nimport languages from \"../../utility/constants\";\r\nimport { Tab, Tabs, Input } from \"@material-ui/core\";\r\nimport \"./popular.css\";\r\nimport { debounce } from \"debounce\";\r\n\r\nexport default class SelectedLanguage extends React.Component {\r\n  onChangeSearchInput = (evt) => {\r\n    this.debouncedSearch(evt.target.value);\r\n  };\r\n\r\n  debouncedSearch = debounce(function (query) {\r\n    this.props.click(query);\r\n  }, 1000);\r\n\r\n  render() {\r\n    const { click } = this.props;\r\n    return (\r\n      <Tabs value={false}>\r\n        <div className=\"navigationLink\">\r\n          {languages.map((lang, key) => {\r\n            return (\r\n              <Tab\r\n                label={lang.label}\r\n                value={lang.value}\r\n                key={key}\r\n                onClick={() => click(lang.value)}\r\n                className={\r\n                  this.props.selectItem === lang.value ? \"selectedItem\" : null\r\n                }\r\n              />\r\n            );\r\n          })}\r\n          <Input\r\n            placeholder={`Search your favorite language`}\r\n            type=\"text\"\r\n            className=\"popular-input\"\r\n            onChange={this.onChangeSearchInput}\r\n          />\r\n        </div>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\nexport default class PopularListRender extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"popular-item\">\r\n        <p>\r\n          Project:{\" \"}\r\n          <a href={this.props.popularItem.html_url}>\r\n            {this.props.popularItem.name}\r\n          </a>\r\n        </p>\r\n        <p>Position: {this.props.index}</p>\r\n        <p>Watchers: {this.props.popularItem.watchers}</p>\r\n        <img src={this.props.popularItem.owner.avatar_url} width=\"110px\"></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport SelectLanguage from \"../components/Popular/selectPopular\";\r\nimport { BoxLoading } from \"react-loadingg\";\r\nimport PopularListRender from \"../components/Popular/popularListItem\";\r\nimport api from \"../utility/api\";\r\nimport \"../components/Popular/popular.css\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\n\r\nclass Popular extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: \"All\",\r\n      isLoading: false,\r\n      data: null,\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    const response = await api.fetchRepo(\"all\");\r\n    this.setState({ isLoading: true, data: response });\r\n  };\r\n  activeLabel = async (lang) => {\r\n    console.log(lang);\r\n    this.setState({\r\n      language: lang,\r\n      isLoading: false,\r\n    });\r\n\r\n    const response = await api.fetchRepo(lang);\r\n    if(response!==undefined)\r\n    this.setState({ isLoading: true, data: response });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectLanguage\r\n          click={this.activeLabel}\r\n          selectItem={\r\n            this.state.language != \"\" ? this.state.language.toLowerCase() : null\r\n          }\r\n        ></SelectLanguage>\r\n\r\n        <div className=\"popular-container\">\r\n          {this.state.isLoading === true ? (\r\n            this.state.data.map((item, key) => {\r\n              return (\r\n                <ReactCSSTransitionGroup\r\n                  transitionName=\"fade\"\r\n                  transitionEnterTimeout={2000}\r\n                  transitionLeaveTimeout={1000}\r\n                  transitionAppear={true}\r\n                  transitionAppearTimeout={1000}\r\n                >\r\n                  <PopularListRender\r\n                    popularItem={item}\r\n                    key={key}\r\n                    index={key + 1}\r\n                  ></PopularListRender>\r\n                </ReactCSSTransitionGroup>\r\n              );\r\n            })\r\n          ) : (\r\n            <BoxLoading />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popular;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../components/Home/home.css\";\r\n\r\nexport default class NotReady extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"not-ready-container\">\r\n        <p className=\"home-description\">Come back after you're ready</p>\r\n        <iframe\r\n          width=\"60%\"\r\n          height=\"70%\"\r\n          src=\"https://www.youtube.com/embed/wtFPIOV2bWM?&autoplay=1&controls=0\"\r\n          frameborder=\"0\"\r\n          allowfullscreen\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import createHistory from 'history/createBrowserHistory';\r\nexport default createHistory();","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { error: null, errorInfo: null };\r\n    }\r\n    \r\n    componentDidCatch(error, errorInfo) {\r\n      // Catch errors in any components below and re-render with error message\r\n      this.setState({\r\n        error: error,\r\n        errorInfo: errorInfo\r\n      })\r\n      // You can also log error messages to an error reporting service here\r\n    }\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n          // Error path\r\n          return (\r\n            <div>\r\n              <h2>Something went wrong.</h2>\r\n              <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                {this.state.error && this.state.error.toString()}\r\n                <br />\r\n                {this.state.errorInfo.componentStack}\r\n              </details>\r\n            </div>\r\n          );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n      }  \r\n    }","import React, { PureComponent } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, HashRouter } from \"react-router-dom\";\r\n\r\nimport Home from \"../../pages/home\";\r\nimport Battle from \"../../pages/battle\";\r\nimport Group from \"../../pages/group\";\r\nimport Statistics from \"../../pages/groupStatistics\";\r\nimport Popular from \"../../pages/popular\";\r\nimport NotReady from \"../../pages/notReady\";\r\nimport \"./Layout.css\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport history from \"../../history\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ErrorBoundary from \"../../utility/ErrorBoundary\";\r\n\r\nclass Layout extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ready: false,\r\n    };\r\n  }\r\n\r\n  readyToFight = () => {\r\n    this.setState({\r\n      ready: true,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"layout\">\r\n        <div className=\"main\">\r\n          <HashRouter history={history}>\r\n            {this.state.ready === true ? (\r\n              <Tabs value={false} className=\"nav-section\">\r\n                <Link to=\"/battle\" className=\"navigationLink\">\r\n                  <Tab label=\"Battle\" />\r\n                </Link>\r\n                <Link to=\"/group\" className=\"navigationLink\">\r\n                  <Tab label=\"Group\" />\r\n                </Link>\r\n                <Link to=\"/popular\" className=\"navigationLink\">\r\n                  <Tab label=\"Popular\" />\r\n                </Link>\r\n              </Tabs>\r\n            ) : null}\r\n\r\n            <div className=\"content\">\r\n              <ToastContainer autoClose={3500} bodyClassName=\"dark-toast\" />\r\n\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <ErrorBoundary>\r\n                    <Home click={this.readyToFight} />\r\n                  </ErrorBoundary>\r\n                </Route>\r\n                <Route path=\"/battle\">\r\n                  <ErrorBoundary>\r\n                    <Battle />\r\n                  </ErrorBoundary>\r\n                </Route>\r\n                <Route path=\"/group\">\r\n                  <ErrorBoundary>\r\n                    <Group />\r\n                  </ErrorBoundary>\r\n                </Route>\r\n                <Route path=\"/group/statistics\">\r\n                  <ErrorBoundary>\r\n                    <Statistics />\r\n                  </ErrorBoundary>\r\n                </Route>\r\n                <Route path=\"/popular\">\r\n                  <ErrorBoundary>\r\n                    <Popular />\r\n                  </ErrorBoundary>\r\n                </Route>\r\n                <Route path=\"/notReady\">\r\n                  <ErrorBoundary>\r\n                    <NotReady />\r\n                  </ErrorBoundary>\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </HashRouter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Layout from \"./components/Layout/Layout\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Layout></Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions\";\r\nconst initialState = {\r\n  dynamicFormSerial: [(\"\", 1), (\"\", 2)],\r\n  dynamicFormData: [],\r\n  dyanicDataFromFetch: [],\r\n  winnerScore: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_FORM: {\r\n      const { dynamicFormSerial } = state;\r\n      let tempDynamicSerial = dynamicFormSerial;\r\n      let lastFormSerial = tempDynamicSerial[tempDynamicSerial.length - 1] + 1;\r\n      tempDynamicSerial = [...tempDynamicSerial, lastFormSerial];\r\n      return {\r\n        ...state,\r\n        dynamicFormSerial: tempDynamicSerial.concat(),\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_FORM: {\r\n      const { dynamicFormData, dynamicFormSerial, dyanicDataFromFetch } = state;\r\n\r\n      return {\r\n        ...state,\r\n        dynamicFormSerial: dynamicFormSerial.slice(0, -1),\r\n        dynamicFormData: dynamicFormData.slice(0, -1),\r\n        dyanicDataFromFetch: dyanicDataFromFetch.slice(0, -1),\r\n      };\r\n    }\r\n    case actionTypes.MODIFY_CONTENT: {\r\n      const { dynamicFormData } = state;\r\n      let tempDynamicComponentData = dynamicFormData;\r\n      let removeItem = null;\r\n      tempDynamicComponentData.map((item) => {\r\n        if (item.formSerial === action.data.formSerial) {\r\n          removeItem = item;\r\n        }\r\n      });\r\n      removeItem !== null &&\r\n        tempDynamicComponentData.splice(\r\n          tempDynamicComponentData.indexOf(removeItem),\r\n          1\r\n        );\r\n      tempDynamicComponentData.push(action.data);\r\n      return {\r\n        ...state,\r\n        dynamicFormData: tempDynamicComponentData.concat(),\r\n      };\r\n    }\r\n\r\n    case actionTypes.REMOVE_FORM_CLICK: {\r\n      const { dynamicFormSerial, dynamicFormData, dyanicDataFromFetch } = state;\r\n      let tempDynamicSerial = dynamicFormSerial;\r\n      let tempDynamicComponentData = dynamicFormData;\r\n      let tempDynamicFetchData = dyanicDataFromFetch;\r\n      let removeIndex = null;\r\n      dynamicFormData.map((item, index) => {\r\n        if (item.formSerial === action.removeFormSerial) {\r\n          removeIndex = index;\r\n        }\r\n      });\r\n      let removeIndexForm = null;\r\n      dynamicFormSerial.map((item, index) => {\r\n        if (item === action.removeFormSerial) {\r\n          removeIndexForm = index;\r\n        }\r\n      });\r\n      let removeIndexFetch = null;\r\n      dyanicDataFromFetch.map((item, index) => {\r\n        if (item.login === action.name) {\r\n          removeIndexFetch = index;\r\n        }\r\n      });\r\n      tempDynamicComponentData.splice(removeIndex, 1);\r\n      tempDynamicFetchData.splice(removeIndexFetch, 1);\r\n      tempDynamicSerial.splice(removeIndexForm, 1);\r\n      return {\r\n        ...state,\r\n        dynamicFormSerial: tempDynamicSerial.concat(),\r\n        dynamicFormData: tempDynamicComponentData.concat(),\r\n        dyanicDataFromFetch: tempDynamicFetchData.concat(),\r\n      };\r\n    }\r\n\r\n    case actionTypes.RESET: {\r\n      return {\r\n        ...state,\r\n        dynamicFormSerial: [(\"\", 1), (\"\", 2)].concat(),\r\n        dynamicFormData: [].concat(),\r\n        dyanicDataFromFetch: [].concat(),\r\n        winnerScore: 0,\r\n      };\r\n    }\r\n    case actionTypes.RESET_USER: {\r\n      const { dyanicDataFromFetch } = state;\r\n      let tempDynamicFetchData = dyanicDataFromFetch;\r\n      let removeIndexFetch = null;\r\n      dyanicDataFromFetch.map((item, index) => {\r\n        if (item.login === action.name) {\r\n          removeIndexFetch = index;\r\n        }\r\n      });\r\n      tempDynamicFetchData.splice(removeIndexFetch, 1);\r\n\r\n      return {\r\n        ...state,\r\n        dyanicDataFromFetch: tempDynamicFetchData.concat(),\r\n      };\r\n    }\r\n\r\n    case actionTypes.SUBMIT_FETCH_USER: {\r\n      const { dyanicDataFromFetch, winnerScore } = state;\r\n      let tempDynamicFetchUser = dyanicDataFromFetch;\r\n\r\n      tempDynamicFetchUser.push(action.user);\r\n\r\n      return {\r\n        ...state,\r\n        dyanicDataFromFetch: tempDynamicFetchUser.concat(),\r\n        winnerScore: action.score > winnerScore ? action.score : winnerScore,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions\";\r\nconst initialState = {\r\n  leftTeam: [],\r\n  rightTeam: [],\r\n  scoreLeftTeam: 0,\r\n  scoreRightTeamL: 0,\r\n  winnerScore: 0,\r\n};\r\n\r\nfunction calculateTotalScore(listTeam) {\r\n  let score = 0;\r\n  if (listTeam != null) {\r\n    listTeam.map((item) => {\r\n      score += item.score;\r\n    });\r\n  }\r\n\r\n  return score;\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_TEAM: {\r\n      let totalScoreLeftTeam = calculateTotalScore(action.leftList);\r\n      let totalScoreRightTeam = calculateTotalScore(action.rightList);\r\n\r\n      return {\r\n        ...state,\r\n        leftTeam: action.leftList,\r\n        rightTeam: action.rightList,\r\n        scoreLeftTeam: totalScoreLeftTeam,\r\n        scoreRightTeamL: totalScoreRightTeam,\r\n      };\r\n    }\r\n\r\n    case actionTypes.ADD_TEAM: {\r\n      const { leftTeam, rightTeam } = state;\r\n      if (action.team === \"left\") {\r\n        return {\r\n          ...state,\r\n          leftTeam: [...leftTeam, action.user],\r\n          scoreLeftTeam: action.score + state.scoreLeftTeam,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          rightTeam: [...rightTeam, action.user],\r\n          scoreRightTeamL: action.score + state.scoreRightTeamL,\r\n        };\r\n      }\r\n    }\r\n\r\n    case actionTypes.REMOVE_USER: {\r\n      const { leftTeam, rightTeam } = state;\r\n      if (action.team === \"left\") {\r\n        let temporayDynamicLeftTeam = leftTeam;\r\n        let removeIndex = null;\r\n        leftTeam.map((item, index) => {\r\n          if (item.gitData.login === action.name) {\r\n            removeIndex = index;\r\n          }\r\n        });\r\n        let tempScoreUser = leftTeam[removeIndex].score;\r\n        temporayDynamicLeftTeam.splice(removeIndex, 1);\r\n        return {\r\n          ...state,\r\n          leftTeam: temporayDynamicLeftTeam.concat(),\r\n          scoreLeftTeam: state.scoreLeftTeam - tempScoreUser,\r\n        };\r\n      } else {\r\n        let temporayDynamicRightTeam = rightTeam;\r\n        let removeIndex = null;\r\n        rightTeam.map((item, index) => {\r\n          if (item.gitData.login === action.name) {\r\n            removeIndex = index;\r\n          }\r\n        });\r\n        let tempScoreUser = rightTeam[removeIndex].score;\r\n\r\n        temporayDynamicRightTeam.splice(removeIndex, 1);\r\n        return {\r\n          ...state,\r\n          rightTeam: temporayDynamicRightTeam.concat(),\r\n          scoreRightTeamL: state.scoreRightTeamL - tempScoreUser,\r\n        };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore ,combineReducers} from \"redux\";\r\nimport battleReducer from \"./store/reducers/battleReducer\";\r\nimport groupReducer from \"./store/reducers/groupReducer\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  battle:battleReducer,\r\n  group:groupReducer\r\n})\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}